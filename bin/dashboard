#!/usr/bin/env node

/**
 * Constraint Monitor Dashboard Command
 * Convenient wrapper for launching the dashboard
 */

import { DashboardLauncher } from '../scripts/launch-dashboard.js';

const launcher = new DashboardLauncher();

// Parse arguments
const args = process.argv.slice(2);

if (args.includes('--help') || args.includes('-h')) {
    console.log(`
üõ°Ô∏è  Constraint Monitor Dashboard

Usage: dashboard [options]

Options:
  --standalone          Run dashboard server in standalone mode
  --port=<number>       Specify dashboard port (default: 3001)
  --status             Show dashboard status without launching
  --stop               Stop running dashboard server
  --help, -h           Show this help message

Examples:
  dashboard                    Launch dashboard and open browser
  dashboard --standalone       Launch dashboard server only
  dashboard --port=8080        Launch on custom port
  dashboard --status           Check dashboard status
`);
    process.exit(0);
}

if (args.includes('--status')) {
    const info = await launcher.getServerInfo();
    console.log('üõ°Ô∏è  Dashboard Status:');
    console.log(`   Running: ${info.running ? '‚úÖ Yes' : '‚ùå No'}`);
    console.log(`   Port: ${info.port}`);
    console.log(`   Dashboard: ${info.dashboardUrl}`);
    console.log(`   API: ${info.apiUrl}`);
    process.exit(0);
}

// Launch dashboard
launcher.launch().catch((error) => {
    console.error('‚ùå Failed to launch dashboard:', error.message);
    process.exit(1);
});